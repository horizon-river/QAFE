<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.kpk.exam.demo.repository.ArticleRepository">

	<!-- 게시물 작성 -->
	<insert id="writeArticle">
		INSERT INTO article 
		SET regDate = NOW(), 
		updateDate = NOW(), 
		memberId = #{loginedMemberId},
		boardId = #{boardId},
		title = #{title}, 
		`body` = #{body}
	</insert>
	
	<!-- 마지막으로 insert된 Id 조회 -->
	<select id="getLastInsertId" resultType="int">
		SELECT LAST_INSERT_ID()
	</select>
	
	<!-- 특정 게시물 조회 -->
	<select id="getForPrintArticle" resultType="Article">
		SELECT A.*, M.nickname AS writer, 
		(SELECT COUNT(*) FROM answer WHERE A.id = answer.relId) AS extra__answerCount,
		IFNULL((SELECT choiceStatus FROM answer 
				WHERE A.id = answer.relId AND answer.choiceStatus = 1), 0) AS extra__choiceStatus
		FROM article AS A
		LEFT JOIN `member` AS M
		ON A.memberId = M.id
		WHERE A.id = #{id}
	</select>
	
	<!-- 게시물 리스트 -->
	<select id="getArticles" resultType="Article">
	    SELECT A.*, M.nickname as writer, 
	    (SELECT COUNT(*) FROM answer WHERE A.id = answer.relId) AS extra__answerCount,
		IFNULL((SELECT choiceStatus FROM answer 
				WHERE A.id = answer.relId AND answer.choiceStatus = 1), 0) AS extra__choiceStatus,
		(goodReactionPoint - badReactionPoint) AS extra__sumReactionPoint
		FROM article AS A
		LEFT JOIN `member` AS M
		ON A.memberId = M.id
		WHERE 1
		<if test="boardId != 0">
			AND A.boardId = #{boardId}
		</if>
		<if test="searchKeyword != ''">
			<choose>
				<when test="searchKeywordTypeCode == 'title'">
					AND A.title LIKE CONCAT('%', #{searchKeyword}, '%')				
				</when>
				<when test="searchKeywordTypeCode == 'body'">
					AND A.body LIKE CONCAT('%', #{searchKeyword}, '%')				
				</when>
				<otherwise>
					AND (
						A.title LIKE CONCAT('%', #{searchKeyword}, '%')
						OR A.body LIKE CONCAT('%', #{searchKeyword}, '%')
						)
				</otherwise>
			</choose>
		</if>
		<if test="sortBy != null">
			<choose>
				<when test="sortBy == 'regDate'">
					ORDER BY A.regDate DESC
				</when>
				<when test="sortBy == 'hitCount'">
					ORDER BY A.hitCount DESC, A.regDate DESC
				</when>
				<when test="sortBy == 'extra__sumReactionPoint'">
					ORDER BY extra__sumReactionPoint DESC, A.regDate DESC
				</when>
				<otherwise>
					ORDER BY A.id DESC
				</otherwise>
			</choose>
		</if>
		<if test="limitTake != -1">
			LIMIT #{limitStart}, #{limitTake}
		</if>
	</select>
	
	<!-- 게시물 삭제 -->
	<delete id="deleteArticle">
		DELETE FROM article 
		WHERE id = #{id}
	</delete>
	
	<!-- 게시물 수정 -->
	<update id="modifyArticle">
		UPDATE article 
		<set>
			<if test="title != null and title != ''">title = #{title},</if>
			<if test="body != null and body != ''">`body` = #{body},</if>
			updateDate = NOW() 
		</set>
		WHERE id = #{id}
	</update>
	
	<!-- 총 게시물 수 -->
	<select id="getArticlesCount" resultType="int">
		SELECT COUNT(*)
		FROM article AS A
		WHERE 1
		<if test="boardId != 0">
			AND A.boardId = #{boardId}
		</if>
		<if test="searchKeyword != ''">
			<choose>
				<when test="searchKeywordTypeCode == 'title'">
					AND A.title LIKE CONCAT('%', #{searchKeyword}, '%')				
				</when>
				<when test="searchKeywordTypeCode == 'body'">
					AND A.body LIKE CONCAT('%', #{searchKeyword}, '%')				
				</when>
				<otherwise>
					AND (
						A.title LIKE CONCAT('%', #{searchKeyword}, '%')
						OR A.body LIKE CONCAT('%', #{searchKeyword}, '%')
						)
				</otherwise>
			</choose>
		</if>
	</select>
	
	<update id="increaseHitCount">
		UPDATE article
		SET hitCount = hitCount + 1 
		WHERE id = #{id}
	</update>
	
	<!-- 조회수 증가 -->
	<select id="getArticleHitCount" resultType="int">
		SELECT hitCount
		FROM article
		WHERE id=#{id}
	</select>
	
	<!-- 좋아요 추가 반영 -->
	<update id="increaseGoodReactionPoint">
		UPDATE article
		SET goodReactionPoint = goodReactionPoint + 1
		WHERE id = #{relId}
	</update>
	
	<!-- 싫어요 추가 반영 -->
	<update id="increaseBadReactionPoint">
		UPDATE article
		SET badReactionPoint = badReactionPoint + 1
		WHERE id = #{relId}
	</update>
	
	<!-- 좋아요 취소 처리 반영 -->
	<update id="decreaseGoodReactionPoint">
		UPDATE article
		SET goodReactionPoint = goodReactionPoint - 1
		WHERE id = #{relId}
	</update>
	
	<!-- 싫어요 취소 처리 반영 -->
	<update id="decreaseBadReactionPoint">
		UPDATE article
		SET badReactionPoint = badReactionPoint - 1
		WHERE id = #{relId}
	</update>
	
	<select id="getQuestionCountByMemberId" resultType="int">
		SELECT COUNT(*)
		FROM article
		WHERE memberId = #{loginedMemberId}
		AND boardId = 2
	</select>
</mapper>